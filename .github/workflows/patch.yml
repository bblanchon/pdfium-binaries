name: Patches

on:
  schedule:
    - cron:  '0 14 * * *'
  workflow_dispatch:
  push:

jobs:
  verify:
    name: Verify patches
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3

    - name: Install depot_tools
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        echo "$PWD/depot_tools" >> $GITHUB_PATH

    - name: Checkout PDFium
      id: checkout
      timeout-minutes: 15
      run: |
        gclient config --unmanaged "https://pdfium.googlesource.com/pdfium.git" --custom-var "checkout_configuration=minimal"
        gclient sync --no-history --shallow

    - name: Create patch script
      run: |
        cat >patch.sh <<END
        set -eux
        git -C pdfium reset --hard
        gclient sync -R
        steps/03-patch.sh
        END
        chmod +x patch.sh

    - name: Apply patches for Android
      run: ./patch.sh
      if: always() && steps.checkout.outcome == 'success'
      env:
        PDFium_TARGET_OS: android

    - name: Apply patches for iOS
      run: ./patch.sh
      if: always() && steps.checkout.outcome == 'success'
      env:
        PDFium_TARGET_OS: ios

    - name: Apply patches for Linux
      run: ./patch.sh
      if: always() && steps.checkout.outcome == 'success'
      env:
        PDFium_TARGET_OS: linux

    - name: Apply patches for macOS
      run: ./patch.sh
      if: always() && steps.checkout.outcome == 'success'
      env:
        PDFium_TARGET_OS: macos

    - name: Apply patches for WASM
      run: ./patch.sh
      if: always() && steps.checkout.outcome == 'success'
      env:
        PDFium_TARGET_OS: wasm

    - name: Apply patches for Windows
      run: ./patch.sh
      if: always() && steps.checkout.outcome == 'success'
      env:
        PDFium_TARGET_OS: win

    - name: Apply patches for V8
      run: ./patch.sh
      if: always() && steps.checkout.outcome == 'success'
      env:
        PDFium_TARGET_OS: dummy
        PDFium_ENABLE_V8: true

    - name: Apply patches for musl
      run: ./patch.sh
      if: always() && steps.checkout.outcome == 'success'
      env:
        PDFium_TARGET_OS: linux
        PDFium_TARGET_LIBC: musl