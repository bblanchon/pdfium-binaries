name: Build

on:
  workflow_call:
    inputs:
      branch:
        description: PDFium branch
        type: string
        required: false
        default: main
      version:
        description: PDFium version
        type: string
        required: false
        default: ""
      enable_v8:
        description: Enable V8
        type: boolean
        required: false
        default: false
      is_debug:
        description: Is debug
        type: boolean
        required: false
        default: false
      target_os:
        description: Target OS (android|ios|linux|mac|wasm|win)
        type: string
        required: true
      target_cpu:
        description: Target (CPU arm|arm64|x64|x86|wasm)
        type: string
        required: true
      target_libc:
        description: Target libc (empty string or "musl")
        type: string
        required: false
        default: ''
      emsdk_version:
        description: Emscripten SDK
        type: string
        required: false
        default: 3.1.34
    outputs:
      artifact:
        description: "The name of the artifact"
        value: ${{ jobs.build.outputs.artifact }}

jobs:
  build:
    outputs:
      artifact: ${{ steps.init.outputs.artifact }}
    runs-on: ${{ (inputs.target_os == 'ios' || inputs.target_os == 'mac') && 'macos-latest' || inputs.target_os == 'win' && 'windows-2022' || 'ubuntu-20.04' }}
    steps:
      - name: Initialize
        id: init
        shell: bash
        run: |
          ARTIFACT="pdfium"
          [ "${{inputs.enable_v8}}" == "true" ] && ARTIFACT="$ARTIFACT-v8"
          ARTIFACT="$ARTIFACT-${{inputs.target_os}}"
          [ "${{inputs.target_libc}}" != "" ] && ARTIFACT="$ARTIFACT-${{inputs.target_libc}}"
          [ "${{inputs.target_os}}" != "${{inputs.target_cpu}}" ] && ARTIFACT="$ARTIFACT-${{inputs.target_cpu}}"
          [ "${{inputs.is_debug}}" == "true" ] && ARTIFACT="$ARTIFACT-debug"
          [ "${{inputs.emsdk_version}}" != "" ] && ARTIFACT="$ARTIFACT-${{inputs.emsdk_version}}"
          echo "artifact=$ARTIFACT" >> $GITHUB_OUTPUT
      - name: Checkout this repo
        uses: actions/checkout@v3
      - name: Workaround for libpcre2 i386 # https://github.com/actions/virtual-environments/issues/4589#issuecomment-1100899313
        if: inputs.target_os == 'android'
        run: |
          sudo rm -f /etc/apt/sources.list.d/microsoft-prod.list
          sudo apt-get update -qq
          sudo apt-get install -yqq --allow-downgrades libpcre2-8-0/focal libpcre2-16-0/focal libpcre2-32-0/focal libpcre2-posix2/focal
      - name: Set environment variables
        run: |
          cat >>$GITHUB_ENV <<END
          PDFium_BRANCH=${{ inputs.branch }}
          PDFium_IS_DEBUG=${{ inputs.is_debug }}
          PDFium_TARGET_CPU=${{ inputs.target_cpu }}
          PDFium_TARGET_OS=${{ inputs.target_os }}
          PDFium_TARGET_LIBC=${{ inputs.target_libc }}
          PDFium_ENABLE_V8=${{ inputs.enable_v8 }}
          PDFium_VERSION=${{ inputs.version }}
          EMSDK_VERSION=${{ inputs.emsdk_version }}
          MUSL_URL=${{ secrets.MUSL_URL }}
          END
          steps/00-environment.sh
        shell: bash
      - name: Install (1/2)
        run: steps/01-install.sh
        shell: bash
      - name: Checkout PDFium
        run: steps/02-checkout.sh
        shell: bash
        timeout-minutes: 15
      - name: Apply patches
        run: steps/03-patch.sh
        shell: bash
      - name: Install (2/2)
        run: steps/04-install-extras.sh
        shell: bash
      - name: Configure
        run: |
          steps/05-configure.sh
          cat <<END >>$GITHUB_STEP_SUMMARY
          ## args.gn

          \`\`\`gn
          $(cat pdfium/out/args.gn)
          \`\`\`
          END
        shell: bash
      - name: Build
        run: steps/06-build.sh
        shell: bash
      - name: Stage
        run: steps/07-stage.sh
        shell: bash
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.init.outputs.artifact }}
          path: staging/
      - name: Test
        run: steps/08-test.sh
        shell: bash
