diff --git a/fpdfsdk/BUILD.gn b/fpdfsdk/BUILD.gn
index b97d88141..ec98cbb38 100644
--- a/fpdfsdk/BUILD.gn
+++ b/fpdfsdk/BUILD.gn
@@ -59,6 +59,7 @@ source_set("fpdfsdk") {
     "fpdf_thumbnail.cpp",
     "fpdf_transformpage.cpp",
     "fpdf_view.cpp",
+    "fpdf_emscripten.c",
   ]
 
   configs += [
diff --git a/fpdfsdk/fpdf_emscripten.c b/fpdfsdk/fpdf_emscripten.c
new file mode 100644
index 000000000..9facee7de
--- /dev/null
+++ b/fpdfsdk/fpdf_emscripten.c
@@ -0,0 +1,65 @@
+#include <emscripten.h>
+#include <stdlib.h>
+#include <stdio.h>
+#include "public/fpdfview.h"
+#include "public/fpdf_save.h"
+#include "public/fpdf_dataavail.h"
+
+extern int FPDF_FILEACCESS_CB(void* param, unsigned long position, unsigned char* pBuf, unsigned long size);
+
+EMSCRIPTEN_KEEPALIVE
+FPDF_FILEACCESS* FPDF_FILEACCESS_Create(unsigned long m_FileLen, void* m_Param) {
+  FPDF_FILEACCESS* access = malloc(sizeof(FPDF_FILEACCESS));
+  access->m_FileLen = m_FileLen;
+  access->m_Param = m_Param;
+  access->m_GetBlock = FPDF_FILEACCESS_CB;
+  return access;
+}
+
+EMSCRIPTEN_KEEPALIVE
+int FPDF_FILEACCESS_Size() {
+  return sizeof(FPDF_FILEACCESS);
+}
+
+extern int FPDF_FILEWRITE_CB(FPDF_FILEWRITE* pThis, const void* pData, unsigned long size);
+
+EMSCRIPTEN_KEEPALIVE
+FPDF_FILEWRITE* FPDF_FILEWRITE_Create() {
+  FPDF_FILEWRITE* writer = malloc(sizeof(FPDF_FILEWRITE));
+  writer->version = 1;
+  writer->WriteBlock = FPDF_FILEWRITE_CB;
+  return writer;
+}
+
+EMSCRIPTEN_KEEPALIVE
+int FPDF_FILEWRITE_Size() {
+  return sizeof(FPDF_FILEWRITE);
+}
+
+extern int FX_FILEAVAIL_IS_DATA_AVAILABLE_CB(struct _FX_FILEAVAIL *me, size_t offset, size_t size);
+
+EMSCRIPTEN_KEEPALIVE
+FX_FILEAVAIL* FX_FILEAVAIL_Create() {
+  FX_FILEAVAIL* fileAvail = malloc(sizeof(FX_FILEAVAIL));
+  fileAvail->IsDataAvail = FX_FILEAVAIL_IS_DATA_AVAILABLE_CB;
+  return fileAvail;
+}
+
+EMSCRIPTEN_KEEPALIVE
+int FX_FILEAVAIL_Size() {
+  return sizeof(FX_FILEAVAIL);
+}
+
+extern void FX_DOWNLOADHINTS_ADD_SEGMENT_CB(struct _FX_DOWNLOADHINTS *me, size_t offset, size_t size);
+
+EMSCRIPTEN_KEEPALIVE
+FX_DOWNLOADHINTS* FX_DOWNLOADHINTS_Create() {
+  FX_DOWNLOADHINTS* fileDownloadHints = malloc(sizeof(FX_DOWNLOADHINTS));
+  fileDownloadHints->AddSegment = FX_DOWNLOADHINTS_ADD_SEGMENT_CB;
+  return fileDownloadHints;
+}
+
+EMSCRIPTEN_KEEPALIVE
+int FX_DOWNLOADHINTS_Size() {
+  return sizeof(FX_DOWNLOADHINTS);
+}
\ No newline at end of file
